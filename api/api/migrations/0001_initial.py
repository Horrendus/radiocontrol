# Generated by Django 2.2.4 on 2019-10-30 06:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MPDTask",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("artist", models.CharField(max_length=128)),
                ("title", models.CharField(max_length=128)),
                ("filename", models.CharField(max_length=256)),
                ("pe_length", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[("OK", "OK"), ("WARN", "WARNING"), ("ERROR", "ERROR")],
                        max_length=255,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Song",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("artist", models.CharField(max_length=128)),
                ("title", models.CharField(max_length=128)),
                ("filename", models.CharField(max_length=256, unique=True)),
                ("length", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="ScheduleEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("begin_datetime", models.DateTimeField(unique=True)),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.Playlist"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, editable=False, verbose_name="order"
                    ),
                ),
                (
                    "entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.PlaylistEntry",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.Playlist"
                    ),
                ),
            ],
            options={"order_with_respect_to": "playlist"},
        ),
        migrations.AddField(
            model_name="playlistentry",
            name="song",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.Song"
            ),
        ),
        migrations.AddField(
            model_name="playlist",
            name="entries",
            field=models.ManyToManyField(
                through="api.PlaylistOrder", to="api.PlaylistEntry"
            ),
        ),
        migrations.CreateModel(
            name="MPDTaskScheduleEntryOrder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, editable=False, verbose_name="order"
                    ),
                ),
                (
                    "mpd_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.MPDTask"
                    ),
                ),
                (
                    "schedule_entry",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.ScheduleEntry",
                    ),
                ),
            ],
            options={"order_with_respect_to": "schedule_entry"},
        ),
        migrations.AddField(
            model_name="mpdtask",
            name="schedule_entries",
            field=models.ManyToManyField(
                through="api.MPDTaskScheduleEntryOrder", to="api.ScheduleEntry"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="playlistentry",
            unique_together={("artist", "title", "filename", "pe_length")},
        ),
    ]
